{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","hooks/useForm.js","components/TodoAdd.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desh","TodoList","todos","i","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","TodoAdd","handleAddTodo","descripcion","hadleInputChange","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26246535.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    case \"toggle-old\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            done: !todo.done,\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n  return (\r\n    <li key={todo.id} className=\"list-group-item\">\r\n      <p\r\n        className={`${todo.done && \"complete\"} `}\r\n        onClick={() => handleToggle(todo.id)}\r\n      >\r\n        {index + 1}. {todo.desh}\r\n      </p>\r\n      <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>\r\n        Borrar\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\nimport TodoListItem from \"./TodoListItem\";\r\n\r\nconst TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {todos.map((todo, i) => (\r\n        <TodoListItem\r\n          todo={todo}\r\n          index={i}\r\n          handleDelete={handleDelete}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n\r\nexport default useForm;\r\n","import React from \"react\";\r\nimport useForm from \"../hooks/useForm\";\r\n\r\nconst TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ descripcion }, hadleInputChange, reset] = useForm({\r\n    descripcion: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (descripcion.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desh: descripcion,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newTodo);\r\n    reset();\r\n  };\r\n  return (\r\n    <>\r\n      <h4>Add TO DO</h4>\r\n      <hr />\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"descripcion\"\r\n          className=\"form-control\"\r\n          placeholder=\"To do ...\"\r\n          autoComplete=\"off\"\r\n          value={descripcion}\r\n          onChange={hadleInputChange}\r\n        ></input>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary mt-1 btn-block\"\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoAdd;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport \"./styles.css\";\r\nimport { todoReducer } from \"./todoReducer\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoAdd from \"./TodoAdd\";\r\n\r\nconst TodoApp = () => {\r\n  const init = () => {\r\n    return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  };\r\n\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleDelete = (todoId) => {\r\n    const action = {\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    };\r\n\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>To Do List App ({todos.length})</h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <TodoList\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-5\">\r\n          <TodoAdd handleAddTodo={handleAddTodo} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./components/TodoApp\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}